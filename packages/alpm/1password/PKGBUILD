# Maintainer: Okiki <hey@okikio.dev>

pkgname=1password
_tarver=8.11.4
_tar="1password-${_tarver}.x64.tar.gz"
pkgver=${_tarver//-/_}
pkgrel=27
pkgdesc="Password manager and secure wallet"
arch=('x86_64')
url='https://1password.com'
license=('LicenseRef-1Password-Proprietary')
# Fixed: depends moved to package level where it belongs
depends=('hicolor-icon-theme' 'libgtk-3.so=0' 'nss' 'xdg-utils')
conflicts=('1password-beta' '1password-beta-bin')
options=(!strip)
install="1password.install"
source=(https://downloads.1password.com/linux/tar/stable/${CARCH}/${_tar}{,.sig})
sha256sums=('b3f095d6103c8f78af58498a7f031de8787be0163ce82d0c64b0f08e6e9139de'
            'SKIP')
validpgpkeys=('3FEF9748469ADBE15DA7CA80AC2D62742012EA22')

# Note: makepkg automatically verifies both checksums (sha256sums) and 
# GPG signatures (validpgpkeys + .sig files) - no explicit functions needed

package() {
    # Go to source directory
    cd "1password-${_tarver}.x64"

    # Install icons
    local resolutions=(32x32 64x64 256x256 512x512)
    local resolution
    for resolution in "${resolutions[@]}"; do
        install -Dm0644 "resources/icons/hicolor/${resolution}/apps/1password.png" \
            "${pkgdir}/usr/share/icons/hicolor/${resolution}/apps/1password.png"
    done
    
    # Install desktop file
    install -Dm0644 resources/1password.desktop -t "${pkgdir}/usr/share/applications/"

    # Improved: More robust policy owners detection with fallback
    msg2 "Generating PolKit policy file..."
    local policy_owners
    
    # Try to get human users (UID >= 1000), fallback to current user if none found
    policy_owners="$(awk -F: '$3 >= 1000 && $3 < 65534 { print "unix-user:" $1 }' /etc/passwd | head -n 10 | tr '\n' ' ')"
    
    # Fallback if no users found (e.g., in containers)
    if [[ -z "$policy_owners" ]]; then
        warning "No human users found, using current user as fallback"
        policy_owners="unix-user:$(whoami)"
    fi
    
    export POLICY_OWNERS="$policy_owners"
    
    # Generate the policy file
    eval "cat <<EOF
$(cat ./com.1password.1Password.policy.tpl)
EOF" > ./com.1password.1Password.policy

    # Install system unlock PolKit policy file
    install -Dm0644 com.1password.1Password.policy -t "${pkgdir}/usr/share/polkit-1/actions/"

    # Install examples
    install -Dm0644 resources/custom_allowed_browsers -t "${pkgdir}/usr/share/doc/1password/examples/"

    # Move package contents to /opt/1Password
    cd "${srcdir}"
    install -dm0755 "${pkgdir}/opt"
    mv "1password-${_tarver}.x64" "${pkgdir}/opt/1Password"

    # Cleanup un-needed files
    rm "${pkgdir}/opt/1Password/com.1password.1Password.policy" \
       "${pkgdir}/opt/1Password/com.1password.1Password.policy.tpl" \
       "${pkgdir}/opt/1Password/install_biometrics_policy.sh"
    rm -r "${pkgdir}/opt/1Password/resources/icons/"
    rm "${pkgdir}/opt/1Password/resources/1password.desktop" \
       "${pkgdir}/opt/1Password/resources/custom_allowed_browsers"

    # Symlink /usr/bin executable to opt
    install -dm0755 "${pkgdir}/usr/bin"
    ln -s /opt/1Password/1password "${pkgdir}/usr/bin/1password"

    # chrome-sandbox requires the setuid bit to be specifically set.
    # See https://github.com/electron/electron/issues/17972
    chmod 4755 "${pkgdir}/opt/1Password/chrome-sandbox"
}

# vim:set ts=2 sw=2 et:
